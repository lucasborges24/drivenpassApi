generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  password    String
  Credentials Credentials[]
  cards       cards[]
  securyNotes securyNotes[]
  wifis       wifis[]
}

model Credentials {
  id        Int       @id @default(autoincrement())
  url       String
  username  String    @db.VarChar(50)
  password  String
  title     String    @db.VarChar(50)
  userId    Int
  createdAt DateTime? @default(now())
  user      Users     @relation(fields: [userId], references: [id])

  @@unique([title, userId])
}

model securyNotes {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(50)
  description String    @db.VarChar(1000)
  userId      Int
  createdAt   DateTime? @default(now())
  user        Users     @relation(fields: [userId], references: [id])

  @@unique([title, userId])
}

model cards {
  id             Int       @id @default(autoincrement())
  number         String
  cardholderName String
  securityCode   String
  expirationDate String
  password       String
  isVirtual      Boolean
  type           CardType
  title          String    @db.VarChar(50)
  userId         Int
  createdAt      DateTime? @default(now())
  user           Users     @relation(fields: [userId], references: [id])

  @@unique([title, userId])
}

model wifis {
  id          Int       @id @default(autoincrement())
  networkName String
  password    String
  title       String
  userId      Int
  createdAt   DateTime? @default(now())
  user        Users     @relation(fields: [userId], references: [id])
}

enum CardType {
  credit
  debit
  both
}
